@page "/saved"
@using System.Globalization
@using Client.Services
@inject IJSRuntime JsRuntime
@inject StorageState StorageState

<h1>Saved seaches</h1>

@if (StorageState.SearchQueries.Count == 0)
{
    <a href="">Add anathor searches</a>
}
else
{
    <div id="accordion">

        @foreach (var searchQuery in StorageState.SearchQueries)
        {
            Index++;
            AccordionClass = $"collapse{Index}";
            <div class="card my-3">
                <div class="card-header col-12" id="headingOne">
                    <h5 class="mb-0 d-inline">
                        <button class="btn btn-link" data-toggle="collapse" data-target="#@AccordionClass" aria-expanded="true" aria-controls="@AccordionClass">
                            @searchQuery.Name
                        </button>
                    </h5>

                    <button class="btn btn-sm btn-danger d-inline float-right" @onclick="@(() => StorageState.DeleteFromLocal(searchQuery))">
                        Delete
                    </button>
                </div>

                <div id="@AccordionClass" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">

                    <table class="table table-striped">
                        <tbody>
                        <tr>
                            <th scope="row">Content</th>
                            <td>@searchQuery.SearchQuery.Text</td>
                            <th>Home news</th>
                            <td>@searchQuery.SearchQuery.SearchHomeNews</td>
                        </tr>
                        <tr>
                            <th scope="row">Tag name</th>
                            <td>@searchQuery.SearchQuery.TagName</td>
                            <th>Foreign news</th>
                            <td>@searchQuery.SearchQuery.SearchForeignNews</td>
                        </tr>
                        <tr>
                            <th scope="row">Author Name</th>
                            <td>@searchQuery.SearchQuery.AuthorName</td>
                            <th>Star/End date</th>
                            <td>
                                @searchQuery.SearchQuery.StartDate.GetValueOrDefault().ToString("dd/MM/yyyy") -
                                @searchQuery.SearchQuery.EndDate.GetValueOrDefault().ToString("dd/MM/yyyy")
                            </td>
                        </tr>
                        </tbody>
                    </table>

                    <div class="px-5">
                        @foreach (var article in searchQuery.Articles)
                        {
                            <div class="card mb-3 w-100">
                                <div class="card-header">
                                    <h4>@article.Title</h4>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title overflow-hidden d-block">@article.Description</h5>
                                    <p class="card-text">@(new string(article.Content.Take(400).ToArray()))...</p>

                                    @foreach (var tag in article.Tags)
                                    {
                                        <span class="btn btn-sm btn-primary">
                                            @tag.Name
                                        </span>
                                    }
                                </div>

                                <div class="card-footer text-muted">
                                    @article.Published.ToString(CultureInfo.CurrentCulture)
                                    @if (article.Author != null)
                                    {
                                        <span class="btn btn-sm btn-outline-info float-right">
                                            @article.Author.Name
                                        </span>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private int Index { get; set; }

    public string AccordionClass { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await StorageState.LoadSavedSearches();
    }
}