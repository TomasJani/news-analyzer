@using Client.Services
@using System.Timers;
@using SharedModels.Models
@using BlazorDateRangePicker
@inject ArticleState ArticleState

<h1 class="mb-4 ml-2">Search</h1>

<div class="form-row px-5 mb-3">
    <div class="col-12">
        <label> Content: </label>
        <input class="form-control" placeholder="Content" @bind="SearchQuery.Text" @bind:event="oninput"/>
        <small class="text-muted ml-1">Write words that you want to search</small>
    </div>
</div>

<div class="form-row px-5 mb-3">

    <div class="col-6">
        <label> Author: </label>
        <input class="form-control" placeholder="Author" @bind="SearchQuery.AuthorName" @bind:event="oninput"/>
    </div>

    <div class="col-6">
        <label> Tag: </label>
        <input class="form-control" placeholder="Tag" @bind="SearchQuery.TagName" @bind:event="oninput"/>
    </div>
</div>

<div class="form-row form-check-inline px-5 mb-3 w-100">
    <div class="col-6 pl-2">
        <input class="form-check-input" type="checkbox" @bind="SearchQuery.SearchHomeNews">
        <label class="form-check-label">
            HomeNews
        </label>
    </div>

    <div class="col-6 pl-2">
        <input class="form-check-input" type="checkbox" @bind="SearchQuery.SearchForeignNews">
        <label class="form-check-label">
            Foreign News
        </label>
    </div>
</div>

<div class="px-5 mb-3">
    <DateRangePicker class="form-control w-50 align-content-center" placeholder="Select dates..."/>
</div>

@code {
    [Parameter]
    public SearchQuery SearchQuery { get; set; }

    private async void Search(object source, ElapsedEventArgs e)
    {
        await ArticleState.Search(SearchQuery);
    }

    protected override void OnInitialized()
    {
        SearchQuery.DebounceTimer.Elapsed += Search;
    }

}